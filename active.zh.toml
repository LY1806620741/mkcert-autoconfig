moreOptions = "有关更多选项，请运行“mkcert-help”。"
shortUsage = "mkcert 的用法：\n\n\t$ mkcert -install\n\t在系统信任存储中安装本地 CA。\n\n\t$ mkcert example.org\n\t生成 \"example.org.pem\" 和 \"example.org-key.pem\"。\n\n\t$ mkcert example.com myapp.dev localhost 127.0.0.1 ::1\n\t生成 \"example.com+4.pem\" 和 \"example.com+4-key.pem\"。\n\n\t$ mkcert \"*.example.it\"\n\t生成 \"_wildcard.example.it.pem\" 和 \" _wildcard.example.it-key.pem\"。\n\n\t$ mkcert -uninstall\n\t卸载本地 CA（但不删除它）。\n\n"

[advancedUsage]
description = "这是高级用法"
other = "高级选项:\n\n\t-cert-file FILE、-key-file FILE、-p12-file FILE\n\t\t自定义输出路径。\n\n\t-client\n\t\t生成 用于客户端身份验证的证书。\n\n\t-ecdsa\n\t\t使用 ECDSA 密钥生成证书。\n\n\t-pkcs12\n\t\t生成 \".p12\" PKCS # 12 文件，也称为“.pfx”文件，\n\t\t包含旧应用程序的证书和密钥。\n\n\t-csr CSR\n\t\t根据提供的 CSR 生成证书 。 与除 -install 和 -cert-file 之外的\n\t\t所有其他标志和参数冲突。\n\n\t-CAROOT\n\t\t打印 CA 证书和密钥存储位置。\n\n\t$ CAROOT（环境变量）\n\t\t设置 CA 证书和密钥存储位置。 （这允许\n\t\t并行维护多个本地 CA。）\n\n\t$TRUST_STORES（环境变量）\n\t\t用于安装本地 CA 的以逗号分隔的信任存储列表\n\t\troot CA 进入。 选项有：\"system\"、\"java\" 和 \"nss\"（包括\n\t\tFirefox）。 默认情况下自动检测。\n\n"