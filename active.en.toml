errUnknownGroupCommand = "err. Unknown command \"{{.Name}}\""
failedDeCodePublicKey = "failed to decode public key"
failedEnCodePublicKey = "failed to encode public key"
failedGenCaKey = "failed to generate the CA key"
help = "Usage of {{.Name}}:\n\t\t\n    $ {{.Name}} auto\n    use guide\n\n    $ {{.Name}} mkcert\n    use mkcert, the same as mkcert's usage.\n\n"
moreOptions = "For more options, run \"mkcert -help\"."
shortUsage = "Usage of mkcert:\n\n\t$ mkcert -install\n\tInstall the local CA in the system trust store.\n\n\t$ mkcert example.org\n\tGenerate \"example.org.pem\" and \"example.org-key.pem\".\n\n\t$ mkcert example.com myapp.dev localhost 127.0.0.1 ::1\n\tGenerate \"example.com+4.pem\" and \"example.com+4-key.pem\".\n\n\t$ mkcert \"*.example.it\"\n\tGenerate \"_wildcard.example.it.pem\" and \"_wildcard.example.it-key.pem\".\n\n\t$ mkcert -uninstall\n\tUninstall the local CA (but do not delete it).\n\n"

[advancedUsage]
description = "this is advancedUsage"
other = "Advanced options:\n\n\t-cert-file FILE, -key-file FILE, -p12-file FILE\n\t\tCustomize the output paths.\n\n\t-client\n\t\tGenerate a certificate for client authentication.\n\n\t-ecdsa\n\t\tGenerate a certificate with an ECDSA key.\n\n\t-pkcs12\n\t\tGenerate a \".p12\" PKCS #12 file, also know as a \".pfx\" file,\n\t\tcontaining certificate and key for legacy applications.\n\n\t-csr CSR\n\t\tGenerate a certificate based on the supplied CSR. Conflicts with\n\t\tall other flags and arguments except -install and -cert-file.\n\n\t-CAROOT\n\t\tPrint the CA certificate and key storage location.\n\n\t$CAROOT (environment variable)\n\t\tSet the CA certificate and key storage location. (This allows\n\t\tmaintaining multiple local CAs in parallel.)\n\n\t$TRUST_STORES (environment variable)\n\t\tA comma-separated list of trust stores to install the local\n\t\troot CA into. Options are: \"system\", \"java\" and \"nss\" (includes\n\t\tFirefox). Autodetected by default.\n\n"
